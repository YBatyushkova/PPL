#lang racket

#| 2022-01-21 -- Define a new construct called block-then which creates two scopes for
variables, declared after the scopes, with two different binding. |#

(define-syntax block
  (syntax-rules (then where <-)
    ((_ (f ...) then (g ...) where (var <- a b)...)
     (begin
       (let ((var a)) (f ...))
       (let ((var b)) (g ...))))))
     

(block
 ((displayln (+ x y))
  (displayln (* x y))
  (displayln (* z z)))
 then
 ((displayln (+ x y))
  (displayln (* z x)))
 where (x <- 12 3)(y <- 8 7)(z <- 3 2))
; Result should be: 20 96 9 10 6
